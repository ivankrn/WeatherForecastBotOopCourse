package ru.urfu.weatherforecastbot.bot;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.telegram.telegrambots.meta.api.objects.Chat;
import org.telegram.telegrambots.meta.api.objects.Message;
import ru.urfu.weatherforecastbot.bot.state.BotState;
import ru.urfu.weatherforecastbot.database.ChatContextRepository;
import ru.urfu.weatherforecastbot.database.ChatStateRepository;
import ru.urfu.weatherforecastbot.model.*;
import ru.urfu.weatherforecastbot.service.ReminderService;
import ru.urfu.weatherforecastbot.service.WeatherForecastService;
import ru.urfu.weatherforecastbot.util.WeatherForecastFormatter;
import ru.urfu.weatherforecastbot.util.WeatherForecastFormatterImpl;

import java.time.LocalDateTime;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

/**
 * –¢–µ—Å—Ç—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
 */
@ExtendWith(MockitoExtension.class)
class MessageHandlerImplTest {

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤—â–∏–∫ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
     */
    private final WeatherForecastFormatter forecastFormatter = new WeatherForecastFormatterImpl();
    /**
     * –°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –ø–æ–≥–æ–¥—ã
     */
    private final WeatherForecastService weatherService;
    /**
     * –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤ —á–∞—Ç–æ–≤
     */
    private final ChatContextRepository chatContextRepository;
    /**
     * –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏–π —á–∞—Ç–æ–≤
     */
    private final ChatStateRepository chatStateRepository;
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
     */
    private final MessageHandler messageHandler;
    /**
     * –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏
     */
    private final ReminderService reminderService;

    public MessageHandlerImplTest(@Mock WeatherForecastService weatherService,
                                  @Mock ChatContextRepository chatContextRepository,
                                  @Mock ChatStateRepository chatStateRepository,
                                  @Mock ReminderService reminderService) {
        this.weatherService = weatherService;
        this.chatContextRepository = chatContextRepository;
        this.chatStateRepository = chatStateRepository;
        this.reminderService = reminderService;
        messageHandler = new MessageHandlerImpl(weatherService, forecastFormatter,
                chatContextRepository, chatStateRepository, reminderService);
    }

    @Test
    @DisplayName("–ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –º–µ—Å—Ç–µ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ " +
            "–ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤ —Ç–æ–º –∂–µ —Å–∞–º–æ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –º–µ—Å—Ç–µ")
    void givenPlace_whenTodayForecast_thenReturnTodayForecastForThatPlace() {
        LocalDateTime today = LocalDateTime.of(2023, 10, 10, 0, 0);
        int hours = 24;
        List<WeatherForecast> todayForecast = new ArrayList<>(hours);
        Place place = new Place("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 56.875, 60.625, "Asia/Yekaterinburg");
        for (int hour = 0; hour < hours; hour++) {
            todayForecast.add(
                    new WeatherForecast(place, today.withHour(hour), 0, 0));
        }
        when(weatherService.getForecast("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 1)).thenReturn(todayForecast);

        BotMessage responseMessage = messageHandler.handle(1L, "/info –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥");

        assertEquals("""
                üå°Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥):

                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                01-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                02-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                03-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                05-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                06-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                07-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                09-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                10-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                11-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                13-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                14-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                15-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                17-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                18-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                19-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                21-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                22-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                23-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)""", responseMessage.getText());
    }

    @Test
    @DisplayName("–ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –º–µ—Å—Ç–∞ –±–æ—Ç –∑–∞–ø—Ä–æ—Å–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞, –ø–æ—Å–ª–µ —á–µ–≥–æ " +
            "–æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ–≥–Ω–æ–∑, –ø—Ä–∏ —ç—Ç–æ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ –Ω–µ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω")
    void givenNoPlaceName_whenTodayForecast_thenAskOnlyPlace() {
        long chatId = 1L;
        LocalDateTime today = LocalDateTime.of(2023, 10, 10, 0, 0);
        int hours = 24;
        List<WeatherForecast> todayForecast = new ArrayList<>(hours);
        Place place = new Place("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 56.875, 60.625, "Asia/Yekaterinburg");
        for (int hour = 0; hour < hours; hour++) {
            todayForecast.add(
                    new WeatherForecast(place, today.withHour(hour), 0, 0));
        }
        when(weatherService.getForecast("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 1)).thenReturn(todayForecast);
        ChatContext chatContext = new ChatContext();
        chatContext.setChatId(chatId);
        when(chatContextRepository.findById(chatId)).thenReturn(Optional.of(chatContext));
        ChatState chatState = new ChatState();
        chatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(chatId)).thenReturn(Optional.of(chatState));

        BotMessage forecastTodayMessageResponse = messageHandler.handle(chatId, "/info");
        assertEquals("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞", forecastTodayMessageResponse.getText());
        assertEquals(BotState.WAITING_FOR_TODAY_FORECAST_PLACE_NAME, chatState.getBotState());
        List<Button> forecastTodayMessageButtons = forecastTodayMessageResponse.getButtons();
        assertEquals(1, forecastTodayMessageButtons.size());
        assertEquals("–û—Ç–º–µ–Ω–∞", forecastTodayMessageButtons.get(0).getText());
        assertEquals("/cancel", forecastTodayMessageButtons.get(0).getCallback());

        BotMessage placeNameMessageResponse = messageHandler.handle(chatId, "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥");
        assertEquals("""
                üå°Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥):
                                
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                01-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                02-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                03-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                05-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                06-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                07-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                09-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                10-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                11-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                13-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                14-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                15-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                17-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                18-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                19-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                21-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                22-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                23-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)""", placeNameMessageResponse.getText());
        assertEquals(BotState.INITIAL, chatState.getBotState());
    }

    @Test
    @DisplayName("–ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ, —Ç–æ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å " +
            "–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –º–µ—Å—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    void givenNotFoundPlace_whenTodayForecast_thenReturnNotFound() {
        when(weatherService.getForecast("—Ç–∞–º_–≥–¥–µ_–Ω–∞—Å_–Ω–µ—Ç", 1)).thenReturn(List.of());

        BotMessage responseMessage = messageHandler.handle(1L, "/info —Ç–∞–º_–≥–¥–µ_–Ω–∞—Å_–Ω–µ—Ç");

        assertEquals("–ò–∑–≤–∏–Ω–∏—Ç–µ, –¥–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", responseMessage.getText());
    }

    @Test
    @DisplayName("–ü—Ä–∏ –≤–≤–æ–¥–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ " +
            "–±–æ—Ç –Ω–µ –∑–Ω–∞–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã")
    void givenUnknownCommand_thenReturnUnknownCommand() {
        long chatId = 1L;
        ChatContext chatContext = new ChatContext();
        chatContext.setChatId(chatId);
        when(chatContextRepository.findById(chatId)).thenReturn(Optional.of(chatContext));
        ChatState chatState = new ChatState();
        chatState.setChatId(chatId);
        chatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(chatId)).thenReturn(Optional.of(chatState));

        BotMessage responseMessage = messageHandler.handle(chatId, "/some_unknown_command");

        assertEquals("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã.", responseMessage.getText());
    }

    @Test
    @DisplayName("–ü—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –±–æ—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—á–∞—Ç—å –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é " +
            "—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ")
    void givenSeveralUsers_thenAnswerEveryone() {
        Chat marsDwellerChat = new Chat();
        long marsDwellerChatId = 1L;
        marsDwellerChat.setId(marsDwellerChatId);
        Message marsDwellerMessage = new Message();
        marsDwellerMessage.setText("/info –ú–∞—Ä—Å");
        marsDwellerMessage.setChat(marsDwellerChat);
        Chat instructionsBookwormChat = new Chat();
        long instructionsBookwormChatId = 2L;
        instructionsBookwormChat.setId(instructionsBookwormChatId);
        Message instructionsBookwormMessage = new Message();
        instructionsBookwormMessage.setText("/some_unknown_command –ú–æ—Å–∫–≤–∞");
        instructionsBookwormMessage.setChat(instructionsBookwormChat);
        Chat typicalUserChat = new Chat();
        long typicalUserChatId = 3L;
        typicalUserChat.setId(typicalUserChatId);
        Message typicalUserMessage = new Message();
        typicalUserMessage.setText("/info –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥");
        typicalUserMessage.setChat(typicalUserChat);
        LocalDateTime today = LocalDateTime.of(2023, 10, 10, 0, 0);
        int hours = 24;
        Place mars = new Place("–ú–∞—Ä—Å", 0, 0, "Mars/Mars");
        Place nizhnyNovgorod = new Place("–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", 56.328, 44.002, "Europe/Moscow");
        List<WeatherForecast> nizhnyNovgorodTodayForecast = new ArrayList<>(hours);
        List<WeatherForecast> marsTodayForecast = new ArrayList<>(hours);
        for (int hour = 0; hour < hours; hour++) {
            marsTodayForecast.add(
                    new WeatherForecast(mars, today.withHour(hour), -60, -60));
            nizhnyNovgorodTodayForecast.add(
                    new WeatherForecast(nizhnyNovgorod, today.withHour(hour), 10, 5));
        }
        when(weatherService.getForecast("–ú–∞—Ä—Å", 1))
                .thenReturn(marsTodayForecast);
        when(weatherService.getForecast("–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", 1))
                .thenReturn(nizhnyNovgorodTodayForecast);
        ChatContext marsDwellerChatContext = new ChatContext();
        marsDwellerChatContext.setChatId(marsDwellerChatId);
        when(chatContextRepository.findById(marsDwellerChatId))
                .thenReturn(Optional.of(marsDwellerChatContext));
        ChatState marsDwellerChatState = new ChatState();
        marsDwellerChatState.setChatId(marsDwellerChatId);
        marsDwellerChatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(marsDwellerChatId)).thenReturn(Optional.of(marsDwellerChatState));
        ChatContext instructionsBookwormChatContext = new ChatContext();
        instructionsBookwormChatContext.setChatId(instructionsBookwormChatId);
        when(chatContextRepository.findById(instructionsBookwormChatId))
                .thenReturn(Optional.of(instructionsBookwormChatContext));
        ChatState instructionsBookwormChatState = new ChatState();
        instructionsBookwormChatState.setChatId(instructionsBookwormChatId);
        instructionsBookwormChatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(instructionsBookwormChatId))
                .thenReturn(Optional.of(instructionsBookwormChatState));
        ChatContext typicalUserChatContext = new ChatContext();
        typicalUserChatContext.setChatId(typicalUserChatId);
        when(chatContextRepository.findById(typicalUserChatId))
                .thenReturn(Optional.of(typicalUserChatContext));
        ChatState typicalUserChatState = new ChatState();
        typicalUserChatState.setChatId(typicalUserChatId);
        typicalUserChatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(typicalUserChatId)).thenReturn(Optional.of(typicalUserChatState));

        BotMessage replyToMarsDweller = messageHandler.handle(marsDwellerChatId, "/info –ú–∞—Ä—Å");
        BotMessage replyToInstructionsBookworm =
                messageHandler.handle(instructionsBookwormChatId, "/some_unknown_command –ú–æ—Å–∫–≤–∞");
        BotMessage replyToTypicalUser = messageHandler.handle(typicalUserChatId, "/info –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥");

        assertEquals("""
                üå°Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (–ú–∞—Ä—Å):
                                
                00-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                01-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                02-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                03-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                04-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                05-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                06-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                07-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                08-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                09-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                10-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                11-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                12-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                13-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                14-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                15-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                16-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                17-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                18-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                19-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                20-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                21-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                22-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)
                23-00: -60.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é -60.0¬∞C)""", replyToMarsDweller.getText());
        assertEquals("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã.", replyToInstructionsBookworm.getText());
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –ø—Ä–æ–±–µ–ª—ã
        assertEquals("""
                üå°Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥):
                                
                00-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                01-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                02-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                03-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                04-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                05-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                06-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                07-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                08-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                09-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                10-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                11-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                12-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                13-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                14-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                15-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                16-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                17-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                18-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                19-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                20-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                21-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                22-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)
                23-00: 10.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 5.0¬∞C)""", replyToTypicalUser.getText());
    }

    @Test
    @DisplayName("–ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä–µ–¥ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –º–µ—Å—Ç–µ –æ—Ç–≤–µ—Ç–Ω–æ–µ " +
            "—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä–µ–¥ –≤ —Ç–æ–º –∂–µ —Å–∞–º–æ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –º–µ—Å—Ç–µ")
    void givenPlace_whenWeekForecast_thenReturnFormattedWeekForecast() {
        LocalDateTime now = LocalDateTime.of(2023, 10, 10, 0, 0);
        int days = 7;
        int hourInterval = 4;
        List<WeatherForecast> weekForecast = new ArrayList<>();
        Place place = new Place("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 56.875, 60.625, "Asia/Yekaterinburg");
        for (int day = 0; day < days; day++) {
            for (int hour = 0; hour < 24; hour += hourInterval) {
                weekForecast.add(
                        new WeatherForecast(place, now.plusDays(day).withHour(hour), 0, 0));
            }
        }
        when(weatherService.getForecast("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 7))
                .thenReturn(weekForecast);

        BotMessage responseMessage = messageHandler.handle(1L, "/info_week –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥");

        assertEquals("""
                üå°Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ –Ω–µ–¥–µ–ª—é (–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥):
                                
                10.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                11.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                12.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                13.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                14.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                15.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                16.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)""", responseMessage.getText());
    }

    @Test
    @DisplayName("–ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä–µ–¥ –¥–ª—è –Ω–µ–Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ " +
            "–¥–æ–ª–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")
    void givenNonExistentPlace_whenWeekForecast_thenErrorMessage() {
        when(weatherService.getForecast("—Ç–∞–º_–≥–¥–µ_–Ω–∞—Å_–Ω–µ—Ç", 7)).thenReturn(List.of());

        BotMessage responseMessage = messageHandler.handle(1L, "/info_week —Ç–∞–º_–≥–¥–µ_–Ω–∞—Å_–Ω–µ—Ç");

        assertEquals("–ò–∑–≤–∏–Ω–∏—Ç–µ, –¥–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", responseMessage.getText());
    }

    @Test
    @DisplayName("–ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä–µ–¥ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –±–æ—Ç –∑–∞–ø—Ä–æ—Å–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞, –ø–æ—Å–ª–µ " +
            "—á–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã, –ø—Ä–∏ —ç—Ç–æ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ –Ω–µ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω")
    void givenNoPlaceName_whenWeekForecast_thenAskOnlyPlace() {
        long chatId = 1L;
        LocalDateTime now = LocalDateTime.of(2023, 10, 10, 0, 0);
        int days = 7;
        int hourInterval = 4;
        List<WeatherForecast> weekForecast = new ArrayList<>();
        Place place = new Place("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 56.875, 60.625, "Asia/Yekaterinburg");
        for (int day = 0; day < days; day++) {
            for (int hour = 0; hour < 24; hour += hourInterval) {
                weekForecast.add(
                        new WeatherForecast(place, now.plusDays(day).withHour(hour), 0, 0));
            }
        }
        when(weatherService.getForecast("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 7)).thenReturn(weekForecast);
        ChatContext chatContext = new ChatContext();
        chatContext.setChatId(chatId);
        when(chatContextRepository.findById(chatId)).thenReturn(Optional.of(chatContext));
        ChatState chatState = new ChatState();
        chatState.setChatId(chatId);
        chatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(chatId)).thenReturn(Optional.of(chatState));

        BotMessage forecastWeekMessageResponse = messageHandler.handle(chatId, "/info_week");
        assertEquals("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞", forecastWeekMessageResponse.getText());
        assertEquals(BotState.WAITING_FOR_WEEK_FORECAST_PLACE_NAME, chatState.getBotState());
        List<Button> forecastWeekMessageButtons = forecastWeekMessageResponse.getButtons();
        assertEquals(1, forecastWeekMessageButtons.size());
        assertEquals("–û—Ç–º–µ–Ω–∞", forecastWeekMessageButtons.get(0).getText());
        assertEquals("/cancel", forecastWeekMessageButtons.get(0).getCallback());

        BotMessage placeNameMessageResponse = messageHandler.handle(chatId, "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥");
        assertEquals("""
                üå°Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ –Ω–µ–¥–µ–ª—é (–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥):
                                
                10.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                11.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                12.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                13.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                14.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                15.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                                
                16.10.2023:
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)""", placeNameMessageResponse.getText());
        assertEquals(BotState.INITIAL, chatState.getBotState());
    }

    @Test
    @DisplayName("–ü—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã \"/start\" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å—Å—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ")
    void givenStartCommand_thenReturnHelloMessage() {
        long chatId = 1L;
        ChatContext chatContext = new ChatContext();
        chatContext.setChatId(chatId);
        when(chatContextRepository.findById(chatId)).thenReturn(Optional.of(chatContext));
        ChatState chatState = new ChatState();
        chatState.setChatId(chatId);
        chatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(chatId)).thenReturn(Optional.of(chatState));

        BotMessage responseMessage = messageHandler.handle(chatId, "/start");
        List<Button> responseButtons = responseMessage.getButtons();

        assertEquals("""
                        –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã. –î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:
                        /start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
                        /help - –º–µ–Ω—é –ø–æ–º–æ—â–∏
                        /info <–Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞> - –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è <–Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞>
                        /info_week <–Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞> - –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è <–Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞> –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä—ë–¥.
                        /subscribe <–Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞> <–≤—Ä–µ–º—è –ø–æ –ì—Ä–∏–Ω–≤–∏—á—É> - —Å–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã
                        /del_subscription <–Ω–æ–º–µ—Ä –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è> - —É–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º
                        """,
                responseMessage.getText());
        assertEquals(3, responseButtons.size());
        assertEquals("–£–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑", responseButtons.get(0).getText());
        assertEquals("/forecast", responseButtons.get(0).getCallback());
        assertEquals("–ü–æ–º–æ—â—å", responseButtons.get(1).getText());
        assertEquals("/help", responseButtons.get(1).getCallback());
        assertEquals("–û—Ç–º–µ–Ω–∞", responseButtons.get(2).getText());
        assertEquals("/cancel", responseButtons.get(2).getCallback());
    }

    @Test
    @DisplayName("–ü—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã \"/help\" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏")
    void givenHelpCommand_thenReturnHelpMessage() {
        BotMessage responseMessage = messageHandler.handle(1L, "/help");

        assertEquals("""
                        –í—ã –∑–∞—à–ª–∏ –≤ –º–µ–Ω—é –ø–æ–º–æ—â–∏. –î–ª—è –≤–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:
                        /start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
                        /help - –º–µ–Ω—é –ø–æ–º–æ—â–∏
                        /info <–Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞> - –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è <–Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞>
                        /info_week <–Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞> - –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è <–Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞> –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä—ë–¥.
                        /subscribe <–Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞> <–≤—Ä–µ–º—è –ø–æ –ì—Ä–∏–Ω–≤–∏—á—É> - —Å–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã
                        /del_subscription <–Ω–æ–º–µ—Ä –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è> - —É–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º
                        """,
                responseMessage.getText());
    }

    @Test
    @DisplayName("–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –º–µ—Å—Ç–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏, —Ç–æ –±–æ—Ç –¥–æ–ª–∂–µ–Ω –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ " +
            "—É—Ç–æ—á–Ω–∏—Ç—å –≤—Å–µ –¥–µ—Ç–∞–ª–∏, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø—Ä–∏—Å–ª–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")
    void whenForecast_thenAskDetails() {
        long chatId = 1L;
        LocalDateTime today = LocalDateTime.of(2023, 10, 10, 0, 0);
        int hours = 24;
        List<WeatherForecast> todayForecast = new ArrayList<>(hours);
        Place place = new Place("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 56.875, 60.625, "Asia/Yekaterinburg");
        for (int hour = 0; hour < hours; hour++) {
            todayForecast.add(
                    new WeatherForecast(place, today.withHour(hour), 0, 0));
        }
        when(weatherService.getForecast("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 1)).thenReturn(todayForecast);
        ChatContext chatContext = new ChatContext();
        chatContext.setChatId(chatId);
        when(chatContextRepository.findById(chatId)).thenReturn(Optional.of(chatContext));
        ChatState chatState = new ChatState();
        chatState.setChatId(chatId);
        chatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(chatId)).thenReturn(Optional.of(chatState));

        BotMessage forecastMessageResponse = messageHandler.handle(chatId, "/forecast");
        assertEquals("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞", forecastMessageResponse.getText());
        assertEquals(BotState.WAITING_FOR_PLACE_NAME, chatState.getBotState());
        List<Button> forecastMessageButtons = forecastMessageResponse.getButtons();
        assertEquals(1, forecastMessageButtons.size());
        assertEquals("–û—Ç–º–µ–Ω–∞", forecastMessageButtons.get(0).getText());
        assertEquals("/cancel", forecastMessageButtons.get(0).getCallback());

        BotMessage placeNameMessageResponse = messageHandler.handle(chatId, "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥");
        assertEquals("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (—Å–µ–≥–æ–¥–Ω—è, –∑–∞–≤—Ç—Ä–∞, –Ω–µ–¥–µ–ª—è)",
                placeNameMessageResponse.getText());
        List<Button> placeNameMessageButtons = placeNameMessageResponse.getButtons();
        assertEquals(BotState.WAITING_FOR_TIME_PERIOD, chatState.getBotState());
        assertEquals(4, placeNameMessageButtons.size());
        assertEquals("–°–µ–≥–æ–¥–Ω—è", placeNameMessageButtons.get(0).getText());
        assertEquals("–°–µ–≥–æ–¥–Ω—è", placeNameMessageButtons.get(0).getCallback());
        assertEquals("–ó–∞–≤—Ç—Ä–∞", placeNameMessageButtons.get(1).getText());
        assertEquals("–ó–∞–≤—Ç—Ä–∞", placeNameMessageButtons.get(1).getCallback());
        assertEquals("–ù–µ–¥–µ–ª—è", placeNameMessageButtons.get(2).getText());
        assertEquals("–ù–µ–¥–µ–ª—è", placeNameMessageButtons.get(2).getCallback());
        assertEquals("–û—Ç–º–µ–Ω–∞", placeNameMessageButtons.get(3).getText());
        assertEquals("/cancel", placeNameMessageButtons.get(3).getCallback());

        BotMessage timePeriodMessageResponse = messageHandler.handle(chatId, "–°–µ–≥–æ–¥–Ω—è");
        assertEquals("""
                üå°Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥):
                                
                00-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                01-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                02-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                03-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                04-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                05-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                06-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                07-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                08-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                09-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                10-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                11-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                12-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                13-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                14-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                15-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                16-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                17-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                18-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                19-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                20-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                21-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                22-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)
                23-00: 0.0¬∞C (–ø–æ –æ—â—É—â–µ–Ω–∏—é 0.0¬∞C)""", timePeriodMessageResponse.getText());
        assertEquals(BotState.INITIAL, chatState.getBotState());
    }

    @Test
    @DisplayName("–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥, —Ç–æ –æ—Ç–≤–µ—Ç–Ω–æ–µ " +
            "—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ—Å—å–±—É –≤–≤–µ—Å—Ç–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ")
    void givenUserSendsWrongTimePeriod_whenForecast_thenAskTimePeriodAgain() {
        long chatId = 1L;
        ChatContext chatContext = new ChatContext();
        chatContext.setChatId(chatId);
        when(chatContextRepository.findById(chatId)).thenReturn(Optional.of(chatContext));
        ChatState chatState = new ChatState();
        chatState.setChatId(chatId);
        chatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(chatId)).thenReturn(Optional.of(chatState));

        messageHandler.handle(chatId, "/forecast");
        messageHandler.handle(chatId, "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥");
        BotMessage wrongTimePeriodMessageResponse = messageHandler.handle(chatId, "–ø—Ä–∏–≤–µ—Ç");

        assertEquals("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥. –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: —Å–µ–≥–æ–¥–Ω—è, –∑–∞–≤—Ç—Ä–∞, –Ω–µ–¥–µ–ª—è",
                wrongTimePeriodMessageResponse.getText());
        List<Button> responseMessageButtons = wrongTimePeriodMessageResponse.getButtons();
        assertEquals(4, responseMessageButtons.size());
        assertEquals("–°–µ–≥–æ–¥–Ω—è", responseMessageButtons.get(0).getText());
        assertEquals("–°–µ–≥–æ–¥–Ω—è", responseMessageButtons.get(0).getCallback());
        assertEquals("–ó–∞–≤—Ç—Ä–∞", responseMessageButtons.get(1).getText());
        assertEquals("–ó–∞–≤—Ç—Ä–∞", responseMessageButtons.get(1).getCallback());
        assertEquals("–ù–µ–¥–µ–ª—è", responseMessageButtons.get(2).getText());
        assertEquals("–ù–µ–¥–µ–ª—è", responseMessageButtons.get(2).getCallback());
        assertEquals("–û—Ç–º–µ–Ω–∞", responseMessageButtons.get(3).getText());
        assertEquals("/cancel", responseMessageButtons.get(3).getCallback());
    }

    @Test
    @DisplayName("–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ, —Ç–æ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ  " +
            "–≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –º–µ–Ω—é")
    void whenCancel_thenReturnToMenu() {
        long chatId = 1L;
        ChatContext chatContext = new ChatContext();
        chatContext.setChatId(chatId);
        when(chatContextRepository.findById(chatId)).thenReturn(Optional.of(chatContext));
        ChatState chatState = new ChatState();
        chatState.setChatId(chatId);
        chatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(chatId)).thenReturn(Optional.of(chatState));

        messageHandler.handle(chatId, "/info");
        BotMessage responseMessage = messageHandler.handle(chatId, "/cancel");

        assertEquals("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", responseMessage.getText());
        List<Button> responseButtons = responseMessage.getButtons();
        assertEquals(3, responseButtons.size());
        assertEquals("–£–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑", responseButtons.get(0).getText());
        assertEquals("/forecast", responseButtons.get(0).getCallback());
        assertEquals("–ü–æ–º–æ—â—å", responseButtons.get(1).getText());
        assertEquals("/help", responseButtons.get(1).getCallback());
        assertEquals("–û—Ç–º–µ–Ω–∞", responseButtons.get(2).getText());
        assertEquals("/cancel", responseButtons.get(2).getCallback());
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞.<br>
     * –ü—Ä–æ–≤–µ—Ä–∫–∏:
     * <ul>
     *     <li>–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, —Ç–æ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     *     –æ —Ç–æ–º, —á—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ, –ø—Ä–∏ —ç—Ç–æ–º –æ–Ω–æ –¥–æ–ª–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å—Å—è</li>
     *     <li>–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, —Ç–æ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å
     *     –ø—Ä–æ—Å—å–±—É –≤–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ</li>
     * </ul>
     */
    @Test
    @DisplayName("–¢–µ—Å—Ç –Ω–∞ –ø–æ–ª–Ω—É—é –∫–æ–º–∞–Ω–¥—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
    void testFullSubscribeCommand() {
        long chatId = 1L;

        BotMessage correctTimeMessageResponse = messageHandler.handle(chatId, "/subscribe –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ 05:00");
        assertEquals("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ. –ë—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ 05:00",
                correctTimeMessageResponse.getText());
        verify(reminderService).addReminder(chatId, "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "05:00");

        doThrow(DateTimeParseException.class).when(reminderService)
                .addReminder(chatId, "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "abc");

        BotMessage wrongTimeMessageResponse = messageHandler.handle(chatId, "/subscribe –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ abc");
        assertEquals("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ –≤–∏–¥–µ 00:00 (—á–∞—Å—ã:–º–∏–Ω—É—Ç—ã)",
                wrongTimeMessageResponse.getText());
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–ø–æ–ª–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞.<br>
     * –ü—Ä–æ–≤–µ—Ä–∫–∏:
     * <ul>
     *     <li>–µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è, —Ç–æ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ
     *     —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ—Å—å–±—É –≤–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ</li>
     *     <li>–µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è, —Ç–æ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ
     *     —Å–æ–¥–µ—Ä–∂–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ, –ø—Ä–∏ —ç—Ç–æ–º –æ–Ω–æ –¥–æ–ª–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å—Å—è</li>
     * </ul>
     */
    @Test
    @DisplayName("–¢–µ—Å—Ç –Ω–∞ –Ω–µ–ø–æ–ª–Ω—É—é –∫–æ–º–∞–Ω–¥—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
    void testNotFullSubscribeCommand() {
        long chatId = 1L;
        ChatState chatState = new ChatState();
        chatState.setChatId(chatId);
        chatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(chatId)).thenReturn(Optional.of(chatState));
        ChatContext chatContext = new ChatContext();
        chatContext.setChatId(chatId);
        when(chatContextRepository.findById(chatId)).thenReturn(Optional.of(chatContext));

        BotMessage subscribeMessageResponse = messageHandler.handle(chatId, "/subscribe");
        assertEquals("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥—É—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è",
                subscribeMessageResponse.getText());
        assertEquals(1, subscribeMessageResponse.getButtons().size());
        assertEquals("–û—Ç–º–µ–Ω–∞", subscribeMessageResponse.getButtons().get(0).getText());
        assertEquals("/cancel", subscribeMessageResponse.getButtons().get(0).getCallback());

        BotMessage placeNameMessageResponse = messageHandler.handle(chatId, "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥");
        assertEquals("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è (–≤ UTC), –∫–æ–≥–¥–∞ –¥–æ–ª–∂–Ω–æ –ø—Ä–∏—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ (–ø—Ä–∏–º–µ—Ä: 08:00)",
                placeNameMessageResponse.getText());
        assertEquals(1, placeNameMessageResponse.getButtons().size());
        assertEquals("–û—Ç–º–µ–Ω–∞", placeNameMessageResponse.getButtons().get(0).getText());
        assertEquals("/cancel", placeNameMessageResponse.getButtons().get(0).getCallback());

        doThrow(DateTimeParseException.class).when(reminderService)
                .addReminder(chatId,
                        "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
                        "–í—Ä–µ–º—è - –æ—á–µ—Ä–µ–¥–Ω–∞—è –∏–ª–ª—é–∑–∏—è, —á—å–∏–º —Ä–∞–±–æ–º —è –Ω–µ –∂–µ–ª–∞—é –±—ã—Ç—å.");

        BotMessage wrongTimeMessageResponse =
                messageHandler.handle(chatId, "–í—Ä–µ–º—è - –æ—á–µ—Ä–µ–¥–Ω–∞—è –∏–ª–ª—é–∑–∏—è, —á—å–∏–º —Ä–∞–±–æ–º —è –Ω–µ –∂–µ–ª–∞—é –±—ã—Ç—å.");
        assertEquals("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ –≤–∏–¥–µ 00:00 (—á–∞—Å—ã:–º–∏–Ω—É—Ç—ã)",
                wrongTimeMessageResponse.getText());

        BotMessage timeMessageResponse = messageHandler.handle(chatId, "05:00");
        assertEquals("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ. –ë—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ 05:00",
                timeMessageResponse.getText());
        verify(reminderService).addReminder(chatId, "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "05:00");
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω—É—é –∫–æ–º–∞–Ω–¥—É —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.<br>
     * –ü—Ä–æ–≤–µ—Ä–∫–∏:
     * <ul>
     *     <li>–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å —Ç–∞–∫–æ–π –ø–æ–∑–∏—Ü–∏–µ–π, —Ç–æ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
     *     —É–¥–∞–ª–µ–Ω–∏—è, –∏ –ø—Ä–∏ —ç—Ç–æ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–æ</li>
     *     <li>–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å —Ç–∞–∫–æ–π –ø–æ–∑–∏—Ü–∏–µ–π, —Ç–æ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å
     *     –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å —Ç–∞–∫–æ–π –ø–æ–∑–∏—Ü–∏–µ–π</li>
     *     <li>–µ—Å–ª–∏ –ø–æ–∑–∏—Ü–∏—è –Ω–µ —á–∏—Å–ª–æ, —Ç–æ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ—Å—å–±—É –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ</li>
     * </ul>
     */
    @Test
    @DisplayName("–¢–µ—Å—Ç –Ω–∞ –ø–æ–ª–Ω—É—é –∫–æ–º–∞–Ω–¥—É —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
    void testFullDeleteSubscriptionCommand() {
        long chatId = 1L;

        BotMessage beforeDeletionMessageResponse = messageHandler.handle(chatId, "/del_subscription 1");
        assertEquals("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ. –ë–æ–ª—å—à–µ –Ω–µ –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã.",
                beforeDeletionMessageResponse.getText());
        verify(reminderService).deleteReminderByRelativePosition(chatId, 1);

        doThrow(IllegalArgumentException.class).when(reminderService)
                .deleteReminderByRelativePosition(chatId, 1);

        BotMessage afterDeletionMessageResponse = messageHandler.handle(chatId, "/del_subscription 1");
        assertEquals("–ù–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º.",
                afterDeletionMessageResponse.getText());
        verify(reminderService, times(2)).deleteReminderByRelativePosition(chatId, 1);

        BotMessage notANumberPositionMessageResponse = messageHandler.handle(chatId, "/del_subscription abc");
        assertEquals("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ."
                , notANumberPositionMessageResponse.getText());
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–ø–æ–ª–Ω—É—é –∫–æ–º–∞–Ω–¥—É —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.<br>
     * –ü—Ä–æ–≤–µ—Ä–∫–∏:
     * <ul>
     *     <li>–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä, —Ç–æ –±–æ—Ç –¥–æ–ª–∂–µ–Ω —É–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–¥ —ç—Ç–∏–º –Ω–æ–º–µ—Ä–æ–º</li>
     *     <li>–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –Ω–æ–º–µ—Ä –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, –±–æ—Ç –¥–æ–ª–∂–µ–Ω —É–≤–µ–¥–æ–º–∏—Ç—å —á—Ç–æ –Ω–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
     *     —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º</li>
     *     <li>–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –Ω–µ —á–∏—Å–ª–æ, —Ç–æ –±–æ—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–ø—Ä–æ—Å–∏—Ç—å –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –ø–æ–≤—Ç–æ—Ä–Ω–æ</li>
     * </ul>
     */
    @Test
    @DisplayName("–¢–µ—Å—Ç –Ω–∞ –Ω–µ–ø–æ–ª–Ω—É—é –∫–æ–º–∞–Ω–¥—É —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
    void testNotFullDeleteSubscriptionCommand() {
        long chatId = 1L;
        ChatState chatState = new ChatState();
        chatState.setChatId(chatId);
        chatState.setBotState(BotState.INITIAL);
        when(chatStateRepository.findById(chatId)).thenReturn(Optional.of(chatState));

        BotMessage deleteSubscriptionMessageResponse = messageHandler.handle(chatId, "/del_subscription");
        assertEquals("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–¥–æ —É–¥–∞–ª–∏—Ç—å",
                deleteSubscriptionMessageResponse.getText());
        assertEquals(1, deleteSubscriptionMessageResponse.getButtons().size());
        assertEquals("–û—Ç–º–µ–Ω–∞", deleteSubscriptionMessageResponse.getButtons().get(0).getText());
        assertEquals("/cancel", deleteSubscriptionMessageResponse.getButtons().get(0).getCallback());
        verify(reminderService, never()).deleteReminderByRelativePosition(eq(chatId), anyInt());

        BotMessage correctPositionMessageResponse = messageHandler.handle(chatId, "1");
        assertEquals("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ. –ë–æ–ª—å—à–µ –Ω–µ –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã.",
                correctPositionMessageResponse.getText());
        verify(reminderService).deleteReminderByRelativePosition(chatId, 1);

        doThrow(IllegalArgumentException.class).when(reminderService)
                .deleteReminderByRelativePosition(chatId, 1000);

        messageHandler.handle(chatId, "/del_subscription");
        BotMessage notExistentPositionMessageResponse = messageHandler.handle(chatId, "1000");
        assertEquals("–ù–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º.",
                notExistentPositionMessageResponse.getText());
        verify(reminderService).deleteReminderByRelativePosition(chatId, 1000);

        messageHandler.handle(chatId, "/del_subscription");
        BotMessage notANumberPositionMessageResponse = messageHandler.handle(chatId, "abc");
        assertEquals("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ.",
                notANumberPositionMessageResponse.getText());
    }
}